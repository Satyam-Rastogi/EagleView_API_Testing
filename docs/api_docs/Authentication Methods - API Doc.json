{"openapi":"3.0.1","info":{"title":"Authentication Methods - API Doc","description":"# Introduction \nEagleView leverages OAuth 2.0 token authentication for all API calls.  Please see the <a href=\"/user-guides/developer-guides/authentication-methods\">Authentication Methods</a> page to learn more about the types of authentication supported. </br>\n\n## Documentation Overview\nEach API endpoint in this documentation consists of:\n- **The HTTP method.** Currently includes `GET` and `POST`.\n- **The base path.** The base path is `https://apicenter.eagleview.com` for both sandbox and production. This base path is specified before the endpoint path.\n- **The endpoint path.** For example, `/oauth2/v1/token`.\n- **Required parameters.** These parameters must be included in a request. In the previous example, `grant_type` is a required parameter.\n- **Optional parameters.** These parameters can be included in a request if desired.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->","version":"1.0.0"},"servers":[{"url":"https://apicenter.eagleview.com"}],"paths":{"/oauth2/v1/authorize":{"get":{"summary":"Authorization","description":"The auth code flow requires a user-agent that supports redirection from the authorization server (EagleView Auth server) back to your application. This endpoint is used to generate authorization code which can further be used to generate access token & refresh token for accessing restricted resources as part of authorization code grant type in OAuth 2.0 flow. </br></br> <strong>Note: </strong>When making requests to the authorize endpoint, the browser (user agent) should be redirected to the okta login page. </br></br><strong>Example Request:</strong></br><div style=\"width: 100%; overflow-x: auto; white-space: nowrap; border: 1px solid #ccc; padding: 10px; margin: 20px 0;\"><div id=\"example-request-authorize\" style=\"font-family: monospace; font-size: 14px; white-space: normal;\">https://apicenter.eagleview.com/oauth2/v1/authorize?client_id=0oaska1e1opdvbeOaPu30h9&redirect_uri=https://www.example.com&response_type=code&scope=openid%20AdjustOrder%20Download_Report%20offline_access&&state=1234</div></div>","operationId":"GET /oauth2/v1/authorize","parameters":[{"name":"client_id","in":"query","description":"Client ID of the application created on EV Developer","required":true,"example":"0sfjdkskdndddfOLPu30h9","schema":{"type":"string"}},{"name":"redirect_uri","in":"query","description":"Redirect URI for receiving the authorization code","required":true,"example":"https://www.example.com","schema":{"type":"string"}},{"name":"response_type","in":"query","description":"Response type for the authorization request. This will always be <code>code</code>","required":true,"example":"code","schema":{"type":"string"}},{"name":"scope","in":"query","description":"Requested scopes for access","example":"openid AdjustOrder Download_Report getReportDetail Order offline_access","schema":{"type":"string"}},{"name":"state","in":"query","description":"State parameter for maintaining state","required":true,"example":"state=1234","schema":{"type":"string"}},{"name":"code_challenge","in":"query","description":"Code challenge generated by client using PKCE method","schema":{"type":"string"}},{"name":"code_challenge_method","in":"query","description":"Code challenge method(e.g., 'S256') required for PKCE Flow","schema":{"type":"string"}}],"responses":{"302":{"description":"Authorization redirect to Okta login page","headers":{"Location":{"schema":{"type":"string"}}}},"400":{"description":"Bad Request","content":{"text/html":{"schema":{"type":"object","properties":{"error":{"type":"string","example":"Invalid clientId"},"error_description":{"type":"string","example":"Invalid clientId"}}}}}}}}},"/oauth2/v1/token":{"post":{"summary":"Generate token","description":"The token endpoint is used to generate access token using following grant types\n <ul><li>authorization code</li><li>client credentials</li><li>refresh token</li></ul>","operationId":"POST /oauth2/v1/token","parameters":[{"name":"Authorization","in":"header","description":"Basic Auth using Client ID and Client Credentials (Base64 encoded for <code>ClientID</code>:<code>ClientSecret</code>)","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"required":["grant_type"],"type":"object","properties":{"grant_type":{"type":"string","description":"Type of grant to request."},"redirect_uri":{"type":"string","description":"Redirect URI used to generate the authorization code."},"code":{"type":"string","description":"Authorization Code generated by authorize endpoint."},"refresh_token":{"type":"string","description":"Provide refresh_token to regenerate the access token when expires, required field when <code style=\"color: gray;\">grant_type=refresh_token</code> "},"client_id":{"type":"string","description":"Client ID of the application, required field in PKCE flow"},"code_verifier":{"type":"string","description":"Code verifier used in PKCE flow"}}}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"object","properties":{"access_token":{"type":"string","description":"To be included in the Authorization header of every API call. Expires after 60 minutes.","example":"vcFpyVVFUTzJYcnhvMjE0Slh4dlV4NkZDaHpsT0NIQ1dyd2MivcFpyVVFUTzJYcnhvMjE0Slh4dvcFpyVVFUTzJYcnhvMjE0Slh4dlV4NkZDaHpsT0NIQ1dyd2MiLCJpc3MiOiJodHRwczovL2VhZ2xldmllV4NkZDaHpsT0NIQ1dyd2MiLCJpc3MiOiJodHRwczovL2VhZ2xldmlLCJpc3MiOiJodHRwczovL2VhZ2xldml"},"token_type":{"type":"string","description":"Included at the start of the Authorization header.","example":"Bearer"},"expires_in":{"type":"integer","description":"Seconds until the <code>access_token</code> expires.","example":86400},"scope":{"type":"string","description":"List of scopes requested in the Authorization endpoint","example":"default"},"refresh_token":{"type":"string","description":"Refresh token which can be used to regenerate access token incase it has expired","example":"4dlV4NkZDaHpsT0NIQ1dyd2MivcFpyVVFUTzJYcnhvMjE0Slh4d"},"id_token":{"type":"string","description":"An optional token generated with details of logged in user incase openid scope is requested in the authorize endpoint","example":"VFUTzJYcnhvMjE0Slh4dvcFpyVVFUTzJYcnhvMjE0Slh4dlV4NkZDaHp"}}}}}},"400":{"description":"Bad request.","content":{"application/json":{"schema":{"type":"object","properties":{"errorCode":{"type":"integer","example":60023},"errorDescription":{"type":"string","example":"The authorization grant type is not supported by the authorization server. Configured grant types: [client_credentials]."}}}}}},"401":{"description":"Unauthorized, invalid credentials.","content":{"application/json":{"schema":{"type":"object","properties":{"errorCode":{"type":"integer","example":60026},"errorDescription":{"type":"string","example":"Invalid value for 'client_id' parameter."}}}}}},"429":{"description":"Too many requests.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","example":"Rate limit exceeded."}}}}}}},"security":[{"basicAuth":[]}]}},"/oauth2/v1/revoke":{"post":{"summary":"Revoke token","description":"The Revoke endpoint is used to invalidate an active token.</br> <strong>Note: </strong>Revoke endpoint currently supports invalidation of a refresh token only","operationId":"POST /oauth2/v1/revoke","parameters":[{"name":"Authorization","in":"header","description":"Base64 encoded <code>ClientId</code>:<code>ClientSecret</code>","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"required":["token"],"type":"object","properties":{"token":{"type":"string","description":"The token to revoke (Currently only refresh token is supported)."},"token_type_hint":{"type":"string","description":"Hint about the type of the token provided (optional). Currently only refresh_token is supported in EVDeveloper"}}}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"object"}}}},"400":{"description":"Bad request.","content":{"application/json":{"schema":{"type":"object","properties":{"errorCode":{"type":"integer","example":60023},"errorDescription":{"type":"string","example":"The 'token' req body param is empty, a non-empty value is required."}}}}}},"401":{"description":"Unauthorized, invalid credentials.","content":{"application/json":{"schema":{"type":"object","properties":{"errorCode":{"type":"integer","example":60026},"errorDescription":{"type":"string","example":"Invalid value for 'client_id' parameter."}}}}}}},"security":[{"basicAuth":[]}]}}},"components":{"securitySchemes":{"bearerAuth":{"type":"apiKey","name":"Authorization","in":"header"},"basicAuth":{"type":"http","description":"ClientId and Secret generated via developer portal","scheme":"basic"}}},"x-original-swagger-version":"2.0"}