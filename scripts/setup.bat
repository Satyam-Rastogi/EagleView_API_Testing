@echo off\r\nREM EagleView API Client Setup Script for Windows\r\n\r\necho ========================================\r\necho EagleView API Client Setup\r\necho ========================================\r\n\r\nREM Check if Python is installed\r\npython --version >nul 2>&1\r\nif %errorlevel% neq 0 (\r\n    echo ERROR: Python 3.12 is not installed or not in PATH\r\n    echo Please install Python 3.12 from https://www.python.org/downloads/\r\n    pause\r\n    exit /b 1\r\n)\r\n\r\nREM Check Python version\r\nfor /f \"tokens=2\" %%i in ('python --version') do set PYTHON_VERSION=%%i\r\necho Found Python %PYTHON_VERSION%\r\n\r\nREM Check if pip is available\r\npython -m pip --version >nul 2>&1\r\nif %errorlevel% neq 0 (\r\n    echo ERROR: pip is not available\r\n    pause\r\n    exit /b 1\r\n)\r\n\r\nREM Create virtual environment\r\necho Creating virtual environment...\r\npython -m venv eagleview_env\r\nif %errorlevel% neq 0 (\r\n    echo ERROR: Failed to create virtual environment\r\n    pause\r\n    exit /b 1\r\n)\r\n\r\nREM Activate virtual environment\r\necho Activating virtual environment...\r\ncall eagleview_env\\Scripts\\activate.bat\r\nif %errorlevel% neq 0 (\r\n    echo ERROR: Failed to activate virtual environment\r\n    pause\r\n    exit /b 1\r\n)\r\n\r\nREM Upgrade pip\r\necho Upgrading pip...\r\npython -m pip install --upgrade pip\r\nif %errorlevel% neq 0 (\r\n    echo ERROR: Failed to upgrade pip\r\n    pause\r\n    exit /b 1\r\n)\r\n\r\nREM Install dependencies\r\necho Installing dependencies...\r\npip install -r scripts/requirements.txt\r\nif %errorlevel% neq 0 (\r\n    echo ERROR: Failed to install dependencies\r\n    pause\r\n    exit /b 1\r\n)\r\n\r\nREM Install development dependencies (optional)\r\necho.\r\necho Do you want to install development dependencies? (y/n)\r\nset /p DEV_DEPS=\r\nif /i \"%DEV_DEPS%\"==\"y\" (\r\n    echo Installing development dependencies...\r\n    pip install -r scripts/requirements-dev.txt\r\n    if %errorlevel% neq 0 (\r\n        echo WARNING: Failed to install development dependencies\r\n    )\r\n)\r\n\r\nREM Create data directories\r\necho Creating data directories...\r\nmkdir data 2>nul\r\nmkdir data\\cache 2>nul\r\nmkdir data\\imagery 2>nul\r\nmkdir data\\requests 2>nul\r\nmkdir data\\reports 2>nul\r\nmkdir data\\results 2>nul\r\n\r\nREM Create sample config file if it doesn't exist\r\nif not exist config\\eagleview.yaml (\r\n    echo Creating sample configuration file...\r\n    mkdir config 2>nul\r\n    echo # EagleView API Client Configuration > config\\eagleview.yaml\r\n    echo. >> config\\eagleview.yaml\r\n    echo eagleview: >> config\\eagleview.yaml\r\n    echo   # API Credentials (required) >> config\\eagleview.yaml\r\n    echo   client_id: \"your_client_id_here\" >> config\\eagleview.yaml\r\n    echo   client_secret: \"your_client_secret_here\" >> config\\eagleview.yaml\r\n    echo. >> config\\eagleview.yaml\r\n    echo   # Rate limiting settings >> config\\eagleview.yaml\r\n    echo   requests_per_second: 3.0 >> config\\eagleview.yaml\r\n    echo   requests_per_minute: 50 >> config\\eagleview.yaml\r\n    echo. >> config\\eagleview.yaml\r\n    echo   # Environment settings >> config\\eagleview.yaml\r\n    echo   is_sandbox: true >> config\\eagleview.yaml\r\n    echo. >> config\\eagleview.yaml\r\n    echo   # Output directory for files >> config\\eagleview.yaml\r\n    echo   output_directory: \"data\" >> config\\eagleview.yaml\r\n    echo. >> config\\eagleview.yaml\r\n    echo   # Logging level >> config\\eagleview.yaml\r\n    echo   log_level: \"INFO\" >> config\\eagleview.yaml\r\n)\r\n\r\nREM Create .env file if it doesn't exist\r\nif not exist .env (\r\n    echo Creating sample .env file...\r\n    echo # EagleView API Client Environment Variables > .env\r\n    echo EAGLEVIEW_CLIENT_ID=your_client_id_here >> .env\r\n    echo EAGLEVIEW_CLIENT_SECRET=your_client_secret_here >> .env\r\n    echo EAGLEVIEW_REQUESTS_PER_SECOND=3 >> .env\r\n    echo EAGLEVIEW_REQUESTS_PER_MINUTE=50 >> .env\r\n    echo EAGLEVIEW_IS_SANDBOX=true >> .env\r\n    echo EAGLEVIEW_OUTPUT_DIR=data >> .env\r\n    echo EAGLEVIEW_LOG_LEVEL=INFO >> .env\r\n)\r\n\r\necho.\r\necho Setup completed successfully!\r\necho.\r\necho To use the EagleView API client:\r\necho 1. Activate the virtual environment: eagleview_env\\Scripts\\activate.bat\r\necho 2. Set your API credentials in .env or config\\eagleview.yaml\r\necho 3. Run the CLI: python -m cli.eagleview --help\r\necho.\r\necho For Docker usage:\r\necho 1. Build image: docker build -t eagleview-client .\r\necho 2. Run container: docker run -it eagleview-client\r\necho.\r\necho Press any key to exit...\r\npause >nul